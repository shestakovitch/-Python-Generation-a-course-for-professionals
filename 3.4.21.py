"""Функция fill_up_missing_dates()
Реализуйте функцию fill_up_missing_dates(), которая принимает на вход один аргумент:

dates — список строковых дат в формате DD.MM.YYYY
Функция должна возвращать список, в котором содержатся все даты из списка dates, расположенные в порядке возрастания,
а также все недостающие промежуточные даты.

Примечание 1. Рассмотрим первый тест. Список dates содержит период с 01.11.2021 по 07.11.2021:

dates = ['01.11.2021', '07.11.2021', '04.11.2021', '03.11.2021']
в котором отсутствуют даты 02.11.2021, 05.11.2021, 06.11.2021. Тогда вызов функции:

fill_up_missing_dates(dates)
должен вернуть список:

['01.11.2021', '02.11.2021', '03.11.2021', '04.11.2021', '05.11.2021', '06.11.2021', '07.11.2021']
Примечание 2. Функция должна создавать и возвращать новый список, а не изменять переданный.

Примечание 3. В тестирующую систему сдайте программу, содержащую только необходимую функцию fill_up_missing_dates(),
но не код, вызывающий ее."""

from datetime import datetime, timedelta


def fill_up_missing_dates(dates=list):
    pattern = '%d.%m.%Y'
    dates = [datetime.strptime(dt, pattern) for dt in dates]
    return [(min(dates) + timedelta(days=i)).strftime(pattern) for i in range((max(dates) - min(dates)).days + 1)]